{"remainingRequest":"C:\\Users\\HIGH\\Desktop\\New_Git_INFS\\INFS_Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HIGH\\Desktop\\New_Git_INFS\\INFS_Front\\src\\views\\PMS\\permission_manage.vue?vue&type=template&id=542df252&","dependencies":[{"path":"C:\\Users\\HIGH\\Desktop\\New_Git_INFS\\INFS_Front\\src\\views\\PMS\\permission_manage.vue","mtime":1616052285160},{"path":"C:\\Users\\HIGH\\Desktop\\New_Git_INFS\\INFS_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HIGH\\Desktop\\New_Git_INFS\\INFS_Front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\HIGH\\Desktop\\New_Git_INFS\\INFS_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HIGH\\Desktop\\New_Git_INFS\\INFS_Front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}